# https://stuvel.eu/post/2022-06-05-esphome-touch-dimmer/

#-------------------------------------------
# Add yaml 
#packages:
#  but: !include 
#    file: packages/ujin/button/button.yaml
#    vars:
#      one_butt: GPIO15
#      two_butt: GPIO2
#      touch_threshold_1: 1000 #1150
#      touch_threshold_2: 1000 #1150
#      delta_threshold: 5
#      setup_threshold: false #true
#      delta_brigh: 10%
# and copy file esphome/packages/ujin/button


#-------------------------------------------
# TOUCH
#-------------------------------------------
esp32_touch:
  setup_mode: $setup_threshold


#-------------------------------------------
# BINARY SENSOR
#-------------------------------------------
binary_sensor:
  - platform: esp32_touch
    name: "левая кнопка"
    id: left_touch
    pin: $one_butt
    icon: mdi:gesture-tap-button
    threshold: $touch_threshold_1
    on_click:
      then:
        - if:
            condition:
              switch.is_on: sound
            then:
              - rtttl.play: 'short:d=20,o=5,b=100:e6'  
    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          light.toggle: light_dimmer1
      - timing:
          - ON for at least 1s
        then:
          if: 
            condition:
              light.is_off: light_dimmer1
            then:   
              - light.turn_on:
                  id: light_dimmer1
                  brightness: 0.1
              - while:
                  condition:
                    binary_sensor.is_on: left_touch
                  then:
                    - light.dim_relative:
                        id: light_dimmer1
                        relative_brightness: $delta_brigh
                    - delay: 0.01s
            else: 
              if: 
                condition:
                  lambda: return id(light_dimmer1)->current_values.get_brightness() > 0.5f;
                then:
                  while:
                    condition:
                      binary_sensor.is_on: left_touch
                    then:
                      - light.dim_relative:
                          id: light_dimmer1
                          relative_brightness: -$delta_brigh
                      - delay: 0.5s
                else: 
                  while:
                    condition:
                      binary_sensor.is_on: left_touch
                    then:
                      - light.dim_relative:
                          id: light_dimmer1
                          relative_brightness: $delta_brigh
                      - delay: 0.01s
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          light.turn_on:
            id: light_dimmer1
            brightness: 1

  - platform: esp32_touch
    name: "правая кнопка"
    id: right_touch
    pin: $two_butt
    icon: mdi:gesture-tap-button
    threshold: $touch_threshold_2
    on_click:
      then:
        - if:
            condition:
              switch.is_on: sound
            then:
              - rtttl.play: 'short:d=20,o=5,b=100:e6'    
    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          light.toggle: light_dimmer2
      - timing:
          - ON for at least 1s
        then:
          if: 
            condition:
              light.is_off: light_dimmer2
            then:   
              - light.turn_on:
                  id: light_dimmer2
                  brightness: 0.1
              - while:
                  condition:
                    binary_sensor.is_on: right_touch
                  then:
                    - light.dim_relative:
                        id: light_dimmer2
                        relative_brightness: $delta_brigh
                    - delay: 0.01s
            else: 
              if: 
                condition:
                  lambda: return id(light_dimmer2)->current_values.get_brightness() > 0.5f;
                then:
                  while:
                    condition:
                      binary_sensor.is_on: right_touch
                    then:
                      - light.dim_relative:
                          id: light_dimmer2
                          relative_brightness: -$delta_brigh
                      - delay: 0.5s
                else: 
                  while:
                    condition:
                      binary_sensor.is_on: right_touch
                    then:
                      - light.dim_relative:
                          id: light_dimmer2
                          relative_brightness: $delta_brigh
                      - delay: 0.01s
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          light.turn_on:
            id: light_dimmer2
            brightness: 1


  - platform: template
    id: binary_dimm1

  - platform: template
    id: binary_dimm2              
#-------------------------------------------
# SELECT
#-------------------------------------------
select:
  - platform: template
    name: "Чувствительность кнопок"
    id: sensitivity_of_touch_id
    entity_category: config
    icon: mdi:gesture-tap-hold
    options:
      - "Низкая"              
      - "Средняя"             
      - "Высокая"          
    initial_option: "Средняя"
    optimistic: true
    on_value:
      then:
        - lambda: |-
            switch(i) {
              case 0: 
                id(right_touch).set_threshold ($touch_threshold_1 - $delta_threshold); 
                id(left_touch).set_threshold ($touch_threshold_2 - $delta_threshold); 
                break;
              case 1:  
                id(right_touch).set_threshold ($touch_threshold_1); 
                id(left_touch).set_threshold ($touch_threshold_2); 
                break;
              case 2:  
                id(right_touch).set_threshold ($touch_threshold_1 + $delta_threshold); 
                id(left_touch).set_threshold ($touch_threshold_2 + $delta_threshold); 
                break;
            }
              
              
              
              
