# -------------------------------------------
#  Add yaml and copy file esphome/packages/ujin/sensor/
#packages:
#  bh: !include 
#    file: packages/ujin/sensor/bh1750.yaml
#    vars:
#      id_bh: light_bh
# -------------------------------------------

#-------------------------------------------
# SENSOR BH1750
#-------------------------------------------
sensor:
  - platform: bh1750
    name: "Illuminance"
    id: ${id_bh}
    address: 0x23
    icon: mdi:brightness-5
    filters:
      - delta: 1 
      - throttle: 1s
#-------------------------------------------
# BINARY SENSOR
#-------------------------------------------
binary_sensor:
  - platform: analog_threshold
    name: "Датчик освещенности"
    id: illum
    threshold: 300
    sensor_id: ${id_bh}
    device_class: light
    icon: mdi:brightness-5

    
#-------------------------------------------
# SELECT
#-------------------------------------------
select:
  - platform: template
    name: "Чувствительность датчика освещенности"
    entity_category: config
    options:
     - "Очень высокая"      
     - "Высокая"
     - "Средняя"
     - "Низкая"
     - "Очень низкая"     
    initial_option: "Очень высокая"
    optimistic: true
    icon: mdi:microphone-message
    on_value:
      then:
        - lambda: |-
            switch(i) {
              case 0:
                 id(illum).set_lower_threshold(100.0); 
                 id(illum).set_upper_threshold(100.0); 
                 break;
              case 1: 
                id(illum).set_lower_threshold(150.0);
                id(illum).set_upper_threshold(150.0); 
                break;
              case 2: 
                id(illum).set_lower_threshold(200.0);
                id(illum).set_upper_threshold(200.0); 
                break;
              case 3: 
                id(illum).set_lower_threshold(250.0);
                 id(illum).set_upper_threshold(250.0);
                 break;
              case 4: 
                id(illum).set_lower_threshold(300.0);
                id(illum).set_upper_threshold(300.0); 
                break;
            }