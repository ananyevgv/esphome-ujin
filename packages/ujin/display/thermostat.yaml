#############################################################################
#----Страничка термостат ----------------------------------------------------
#############################################################################
# Add yaml and copy file esphome/packages/ujin/display
#packages:
#  termostat: !include 
#    file: packages/display/termostat.yaml
#    vars:
#      room: holl
#      pin_switch_thermostat: GPIO2
# 
#############################################################################

substitutions:
  heating:            "\U0000e908" # heating
  temperature:        "\U0000e915" # temperature
  home_account:       "\U000F0826"
  bag_suitcase:       "\U000F158B"
  hiking:             "\U000F0D7F"
  bed:                "\U000F02E3"

#-------------------------------------------
# FONT
#-------------------------------------------
font:
  - file: "gfonts://Roboto"
    id: roboto42
    glyphs: |-
      -.0123456789'
    size: 42
    bpp: 4
  - file: "gfonts://Roboto"
    id: roboto18
    glyphs: |-
      0123456789°C
    size: 18
    bpp: 4
    
  - file: "font/Icons.ttf"
    id: termostat30
    size: 30
    bpp: 4
    glyphs: [
      $heating,
      $temperature
    ]
    extras:
      - file: 'font/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
        glyphs: [
          $home_account,
          $bag_suitcase,
          $hiking,
          $bed
          ]
          
#-------------------------------------------
# BINARY_SENSOR
#-------------------------------------------            
binary_sensor:
  - id: !extend bin_vl
    on_press:
    - if:
        condition:
          lvgl.page.is_showing: thermostat_page
        then:
          - light.turn_on: backlight
          - climate.control:
              id:  ${room}_thermostat
              target_temperature: !lambda "return id(${room}_thermostat).target_temperature - 0.5;"
  - id: !extend bin_nl
    on_press:
    - if:
        condition:
          lvgl.page.is_showing: thermostat_page
        then:
          - light.turn_on: backlight
          - switch.toggle:
              id: climate_toggle

  - id: !extend bin_vp
    on_press:
    - if:
        condition:
          lvgl.page.is_showing: thermostat_page
        then:
          - light.turn_on: backlight
          - climate.control:
              id:  ${room}_thermostat
              target_temperature: !lambda "return id(${room}_thermostat).target_temperature + 0.5;"

  - id: !extend bin_np
    on_press:
    - if:
        condition:
          lvgl.page.is_showing: thermostat_page
        then:
          - light.turn_on: backlight
          - lvgl.page.next:  
          
#-------------------------------------------
# SENSOR
#-------------------------------------------
sensor:
  - platform: template
    name: "Heat sensor" 
    id: heat_sensor
    unit_of_measurement: "°C"
    accuracy_decimals: 2
    device_class: TEMPERATURE
    state_class: MEASUREMENT
    update_interval: never
    on_value:
      - lvgl.arc.update:
          id: arc_sensor_temp
          value: !lambda |- 
            return x;
      - lvgl.label.update:
          id: sensor_temperature_thermostat
          text:
            format: "%0.1f"
            args: ["x"] 
#-------------------------------------------
# GLOBALS
#-------------------------------------------            
globals:
  - id: curen_sensor
    type: int
    restore_value: no
    initial_value: '0'
    
#-------------------------------------------
# SELECT
#-------------------------------------------
select:
  - platform: template
    name: "Датчик термостата"
    entity_category: config
    options:
     - "NTC внутрений"      
     - "NTC внешний"
     - "Цифровой датчик"    
    initial_option: "NTC внутрений"
    optimistic: true
    icon: mdi:microphone-message
    on_value:
      then:
        - lambda: |-
            id(curen_sensor) = i; 

#-------------------------------------------
# INTERVAL
#-------------------------------------------
interval:    
  - interval: 1s
    then:
      - lambda: |-    
          int sens = id(curen_sensor);
          switch(sens) {
            case 0: id(heat_sensor).publish_state(id(NTC_temperature_internal).state); break;
            case 1: id(heat_sensor).publish_state(id(NTC_temperature_external).state);  break; 
            case 2: id(heat_sensor).publish_state(id(bme680_t).state);  break;
            // case 2: id(heat_sensor).publish_state(id(sht3x_t).state);  break;
          }
          
#-------------------------------------------
# NUMBER
#-------------------------------------------          
number:
  - platform: template
    name: Гистерезис охлаждение
    optimistic: true
    id: deadband
    unit_of_measurement: "°c"
    icon: mdi:chart-sankey
    initial_value: 0.5
    restore_value: true
    min_value: 0.1
    max_value: 2
    step: 0.1
    mode: box
    on_value: 
      - lambda: return id(${room}_thermostat).set_heat_deadband(x);

  - platform: template
    name: Гистерезис нагрев
    optimistic: true
    id: overrun
    unit_of_measurement: "°c"
    icon: mdi:chart-bell-curve-cumulative
    initial_value: 0.5
    restore_value: true
    min_value: 0.1
    max_value: 2
    step: 0.1
    mode: box
    on_value: 
      - lambda: return id(${room}_thermostat).set_heat_overrun(x);
    
#-------------------------------------------
# SWITCH
#-------------------------------------------
switch:
  - platform: gpio
    pin:
      number: 14 # GPIO27
    id: relay
    
  - platform: template
    id: climate_toggle
    lambda: |-
      if (id(${room}_thermostat).mode  == 3) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - climate.control:
          id: ${room}_thermostat
          mode: "HEAT"
    turn_off_action:
      - climate.control:
          id:  ${room}_thermostat
          mode: "OFF"


          
#-------------------------------------------
# CLIMATE
#-------------------------------------------      
climate:
  - platform: thermostat
    id: ${room}_thermostat
    min_heating_off_time: 5s
    min_heating_run_time: 5s
    min_idle_time: 5s
    heat_deadband:  0.5  # остывает на n от заданной
    heat_overrun: 0.5  # нагревает выше n от заданной
    visual:
      min_temperature: 15 °C
      max_temperature: 30 °C
      temperature_step: 0.5 °C
    name: "${room} Термостат"
    sensor: heat_sensor
    default_preset: Home
    preset:
      - name: Home
        default_target_temperature_low: 24 °C
      - name: AWAY
        default_target_temperature_low: 15 °C
      - name:  SLEEP
        default_target_temperature_low: 19 °C
    heat_action:
      - switch.turn_on: relay
    idle_action:
      - switch.turn_off: relay
    off_mode:
      - switch.turn_off: relay
    on_state: 
      then:
        - lvgl.arc.update:
            id: arc_target_temperature
            value: !lambda |- 
              return id(${room}_thermostat).target_temperature;
              
        - lvgl.label.update:
            id: ${room}_target_temperature
            text:
              format: "%.0f."
              args: ["trunc(id(${room}_thermostat).target_temperature)"] # выводим целую часть установленной температуры, для вывода значения целиком поменять на ["id(${room}_thermostat).target_temperature"]

        - lvgl.label.update:
            id: ${room}_target_temperature_fraction
            text:
              format: "%0.0f"
              args: ["trunc(fmod((id(${room}_thermostat).target_temperature) , 1.0) * 10.0)"] # выводим дробную часть установленной температуры
              
        - if: 
            condition:
              lambda: return (x.mode == CLIMATE_MODE_OFF);
            then:
              - lvgl.label.update:
                  id: ${room}_target_temperature
                  text_color: color_white
              - lvgl.label.update:
                  id: ${room}_target_temperature_fraction
                  text_color: color_white   
              - lvgl.label.update:
                  id: target_temperature_measurement
                  text_color: color_white  
              - lvgl.label.update:
                  id: heating_status
                  text_color: color_black
                  text: "Выкл"
              - lvgl.label.update:
                  id: heating_icon
                  text: "${heating}"
                  text_color: color_white

        - if: 
            condition:
              lambda: return (x.action == CLIMATE_ACTION_HEATING);
            then:
              - lvgl.label.update:
                  id: ${room}_target_temperature
                  text_color: color_black
              - lvgl.label.update:
                  id: ${room}_target_temperature_fraction
                  text_color: color_black
              - lvgl.label.update:
                  id: target_temperature_measurement
                  text_color: color_black
            
              - lvgl.label.update:
                  id: heating_icon
                  text_color: color_deep_orange
                  text: "${heating}"
              - lvgl.label.update:
                  id: heating_status
                  text_color: color_deep_orange
                  text: "Обогрев"        
        - if: 
            condition:
              lambda: return (x.action == CLIMATE_ACTION_IDLE);
            then:
              - lvgl.label.update:
                  id: ${room}_target_temperature
                  text_color: color_black
              - lvgl.label.update:
                  id: ${room}_target_temperature_fraction
                  text_color: color_black
              - lvgl.label.update:
                  id: target_temperature_measurement
                  text_color: color_black
                  
              - lvgl.label.update:
                  id: heating_icon
                  text_color: color_dark_gray
                  text: "${heating}"
              - lvgl.label.update:
                  id: heating_status
                  text_color: color_black
                  text: "Вкл"

#-------------------------------------------
# LVGL
#-------------------------------------------
lvgl:
  pages:
################################################################
# Вывод на экран 
    - id: thermostat_page
      widgets:
        - meter:
            height: 220
            width: 220
            border_width: 0
            bg_opa: TRANSP
            align: CENTER
            scales:
              - range_from: 15
                range_to: 30
                angle_range: 270
                ticks:
                  width: 1
                  count: 31
                  length: 10
                  color: color_white
                  major:
                    stride: 2
                    width: 5
                    length: 15
                    color: color_white
                    label_gap: 15
                indicators:
                  - tick_style:
                      start_value: 15
                      end_value: 30
                      color_start: color_blue
                      color_end: color_crimson
                      width: 1
 
        - arc:
            id: arc_target_temperature
            align: CENTER
            arc_width: 10
            width: 240
            height: 240
            min_value: 15
            max_value: 30
            value: 24
            adjustable: true
            adv_hittest: true
            arc_opa: TRANSP
            indicator:
              arc_color: color_deep_orange
              arc_width: 20
            knob:
              border_color: color_deep_orange
              border_width: 8
              bg_color: color_amber
#            on_release:
#              - climate.control:
#                  id:  ${room}_thermostat
#                  target_temperature: !lambda return x;
 
        - arc:
            id: arc_sensor_temp
            clickable: false
            align: CENTER
            arc_width: 5
            width: 235
            height: 235
            min_value: 15
            max_value: 30
            value: 22
            adjustable: true
            arc_opa: TRANSP
            indicator:
              arc_opa: TRANSP
            knob:
              border_opa: TRANSP
              bg_color: color_green

        - led:
           align: CENTER
           color: 0xffffff
           width: 20
           height: 20
           

        - label:
            id: heating_icon
            y: -40
            align: CENTER
            text_color: color_dark_gray
            text: "${heating}"
            text_font: termostat30
 
        - label:
            id: heating_status
            y: -20
            x: 0
            align: CENTER
            text_font: roboto24
            text_color: color_deep_orange
            text: "Обогрев"
        - obj:        
      #  - button:
            align: CENTER
            y: 20
            width: 85
            height: 67
            bg_opa: TRANSP
            border_opa: TRANSP
            shadow_opa: TRANSP
            scrollbar_mode: "OFF"
            scrollable: false
            widgets:
              - label:
                  x: -10
                  id: ${room}_target_temperature
                  align: LEFT_MID
                  text_font: roboto36
                  text_color: color_black
                  text: "24."
                
              - label:
                  id: target_temperature_measurement
                  align: TOP_RIGHT
                  text_font: roboto18
                  text_color: color_black
                  text: "°C"
                 
              - label:
                  id: ${room}_target_temperature_fraction
                  align: BOTTOM_RIGHT
                  text_font: roboto18
                  text_color: color_black
                  text: "0"
#            on_click:
#              - switch.toggle:
#                  id: climate_toggle
  
        - label:
            id: sensor_temperature_thermostat_icon
            y: 70
            x: -30
            align: CENTER
            text_font: termostat30
            text_color: color_black
            text: "${temperature}"

        - label:
            id: sensor_temperature_thermostat
            y: 70
            x: 10
            align: CENTER
            text_font: roboto24
            text_color: color_black
            text: "na"